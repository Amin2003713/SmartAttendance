version: '3.9'

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server
    container_name: sqlserver
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${MSSQL_SA_PASSWORD}
      - MSSQL_PID=Developer
      - MSSQL_BACKUP_DIR=/var/opt/mssql/backups
      - MSSQL_LCID=1033
      - TZ=Etc/UTC
    ports:
      - "5012:1433"
    networks:
      - shared-network
    volumes:
      - ${BASE_PATH}/mssql/backups:/var/opt/mssql/backups:rw
      - ${BASE_PATH}/mssql/data:/var/opt/mssql/data:rw
      - ${BASE_PATH}/mssql/log:/var/opt/mssql/log:rw
    restart: unless-stopped
    user: root
    healthcheck:
      test: [ "CMD", "/opt/mssql-tools18/bin/sqlcmd", "-S", "localhost", "-U", "SA", "-P", "8CCA6B60A3EF40A59128@6D2824C9AEDC", "-C", "-Q", "select 1" ]
      interval: 10s
      retries: 10


  Sm_minio:
    image: docker.io/bitnami/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: "${MINIO_ROOT_USER}"
      MINIO_ROOT_PASSWORD: "${MINIO_ROOT_PASSWORD}"
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      shared-network:
        aliases:
          - minio
    user: root
    volumes:
      - "${BASE_PATH}/minio/data:/bitnami/minio/data:rw"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mc", "alias", "set", "local", "http://localhost:9000", "${MINIO_ROOT_USER}", "${MINIO_ROOT_PASSWORD}" ]
      interval: 15s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M

  redis:
    image: redis
    container_name: redis
    command:
      - "redis-server"
      - "--requirepass"
      - "${REDIS_PASSWORD}"
      - "--maxmemory"
      - "256mb"
      - "--maxmemory-policy"
      - "allkeys-lru"
      - "--appendonly"
      - "yes"
      - "--appendfilename"
      - "appendonly.aof"
    environment:
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
    ports:
      - "6379:6379"
    networks:
      - shared-network
    volumes:
      - "${BASE_PATH}/redis/data:/data:rw"
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "redis-cli",
          "-a",
          "${REDIS_PASSWORD}",
          "ping",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 1024M


networks:
  shared-network:
    external: true