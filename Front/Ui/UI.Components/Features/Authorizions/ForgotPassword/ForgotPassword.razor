@page "/forgot-password"
@using App.Applications.Users.Requests.ForgotPassword
@inject IStringLocalizer<ForgotPassword> Localizer


<MudContainer MaxWidth="MaxWidth.Small"
              Class="d-flex justify-center align-center"
              Style="min-height: 100svh; padding: 0 !important;">
    <MudCard Elevation="10" Style="border-radius: 20px; width: 100%; padding: 20px; margin: 20px;">

        <MudStack AlignItems="AlignItems.Center" Justify="Justify.Center" Spacing="3">
            <MudImage
                Src="_content/Ui.Components/Icons/login.png"
                Alt="لوگو"
                Width="250"
                Height="250"
                ObjectFit="ObjectFit.Contain"
                ObjectPosition="ObjectPosition.Center"
            />

            <MudText Typo="Typo.h1" Align="Align.Center">
                فراموشی کلمه عبور
            </MudText>
        </MudStack>

        <!-- Login Form -->
        <AppForm TModel="ResetPasswordRequest" Model="Request" OnValidSubmit="PostAsync">
            <FormProps>

                <!-- Username -->
                <MudTextField
                    For="@(() => Request.UserName)"
                    @bind-Value="Request.UserName"
                    Label="نام کاربری"
                    Variant="Variant.Outlined"
                    Margin="Margin.Normal"
                    FullWidth="true"
                    HelperText="نام کاربری خود را وارد کنید(تلفن همراه)"
                    HelperTextOnFocus/>

                <!-- Password -->
                <MudTextField
                    For="@(() => Request.Password)"
                    @bind-Value="Request.Password"
                    Label="رمز عبور جدید"
                    InputType="@_passwordInput"
                    Adornment="Adornment.End"
                    AdornmentIcon="@(_passwordInput == InputType.Password ? MaterialIcons.Filled.Visibility : MaterialIcons.Filled.VisibilityOff)"
                    OnAdornmentClick="ShowPassword"
                    Variant="Variant.Outlined"
                    Margin="Margin.Normal"
                    FullWidth="true"
                    HelperTextOnFocus/>

                <!-- Password -->
                <MudTextField
                    For="@(() => Request.ConfirmPassword)"
                    @bind-Value="Request.ConfirmPassword"
                    Label="تکرار رمز عبور جدید"
                    InputType="@_passwordInput"
                    Adornment="Adornment.End"
                    AdornmentIcon="@(_passwordInput == InputType.Password ? MaterialIcons.Filled.Visibility : MaterialIcons.Filled.VisibilityOff)"
                    OnAdornmentClick="ShowPassword"
                    Variant="Variant.Outlined"
                    Margin="Margin.Normal"
                    FullWidth="true"
                    HelperTextOnFocus/>
                <!-- Forgot Password / Register Links -->
                <MudStack Row="true" Justify="Justify.FlexEnd" Class="mt-2" Reverse>
                    <MudLink
                        OnClick="GoToLogin"
                        Color="Color.Info"
                        Underline="Underline.Hover"
                        Typo="Typo.h5"> ورود؟
                    </MudLink>

                    <MudSpacer/>

                </MudStack>
            </FormProps>

            <!-- Login Button -->
            <SubmitButton>
                <MudStack Class="mt-4" Row="false">
                    <MudButton
                        Color="Color.Primary"
                        Variant="Variant.Filled"
                        ButtonType="ButtonType.Submit"
                        FullWidth="true">
                        @if (ApiCalling)
                        {
                            <CircularProgress Size="Size.Small" Color="Color.Info"/>
                        }
                        else
                        {
                            @("تایید و ورود")
                        }
                    </MudButton>
                </MudStack>
            </SubmitButton>
        </AppForm>

    </MudCard>
</MudContainer>

@code {
    

    

    [SupplyParameterFromQuery(Name = nameof(Username))]
    private string Username { get; set; }

    public ResetPasswordRequest Request { get; set; } = new ();
    public bool ApiCalling { get; set; }
    private InputType _passwordInput = InputType.Password;

    private void ShowPassword()
    {
        _passwordInput = _passwordInput == InputType.Password
            ? InputType.Text
            : InputType.Password;
    }

    protected override void OnInitialized()
    {
        Request = new ResetPasswordRequest
        {
            UserName = Username
        };
    }

    private async Task PostAsync()
    {
        await Mediator.Send(Request);
    }

    private void GoToLogin()
    {
        NavigationManager.NavigateTo("/login");
    }

}
