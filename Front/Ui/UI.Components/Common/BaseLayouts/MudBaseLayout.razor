@using App.Persistence.Services.Tenants
@inject TenantStateProvider TenantProvider
@inherits LayoutComponentBase

<MudRTLProvider RightToLeft>
    <MudThemeProvider @ref="@_mudThemeProvider"
                      Theme="@ThemeService.CurrentTheme"
                      ObserveSystemThemeChange
                      IsDarkMode="@ThemeService.IsDarkMode"/>

    <MudBreakpointProvider/>
    <MudPopoverProvider/>
    <MudDialogProvider/>
    <MudSnackbarProvider/>

    <MudLayout class="page">
        <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Style="padding: 0 !important;">
            @Body
        </MudContainer>
    </MudLayout>
</MudRTLProvider>

@code {
    private MudThemeProvider _mudThemeProvider = null!;


    private  Task ResolveTenant()
    {
        // Just fetch current tenant from the provider
        var tenant = TenantProvider.CurrentTenant;

        if (string.IsNullOrEmpty(tenant) && !NavigationManager.Uri.Contains("/list-branches"))
        {
            NavigationManager.NavigateTo("/list-branches");
        }

        return Task.CompletedTask;
    }

    protected override async Task OnInitializedAsync()
    {
        ThemeService.ThemeChanged += HandleThemeChanged!;
        TenantProvider.TenantChanged += HandleTenantChanged;

        // Ensure initial resolve
        await ResolveTenant();
    }

    private void HandleTenantChanged(string newTenant)
    {
        Console.WriteLine($"Tenant switched to {newTenant}");
        InvokeAsync(StateHasChanged);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await _mudThemeProvider.WatchSystemPreference(ThemeService.OnSystemPreferenceChanged);
            var systemPreference = await _mudThemeProvider.GetSystemPreference();
            ThemeService.ToggleDarkLightMode(systemPreference, false);
        }
    }

    private void HandleThemeChanged(object sender, EventArgs e)
    {
        StateHasChanged();
    }

    public void Dispose()
    {
        ThemeService.ThemeChanged -= HandleThemeChanged!;
        TenantProvider.TenantChanged -= HandleTenantChanged;
    }

}
